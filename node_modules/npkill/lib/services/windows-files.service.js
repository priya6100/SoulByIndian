"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WindowsFilesService = void 0;
const getSize = require("get-folder-size");
const services_1 = require("@core/services");
const rxjs_1 = require("rxjs");
const windows_remove_dir_strategy_1 = require("@core/strategies/windows-remove-dir.strategy");
const path_1 = require("path");
const child_process_1 = require("child_process");
class WindowsFilesService extends services_1.FileService {
    constructor(streamService) {
        super();
        this.streamService = streamService;
        this.windowsStrategyManager = new windows_remove_dir_strategy_1.WindowsStrategyManager();
    }
    getFolderSize(path) {
        return new rxjs_1.Observable((observer) => {
            getSize(path, (err, size) => {
                if (err) {
                    throw err;
                }
                observer.next(super.convertBytesToKB(size));
                observer.complete();
            });
        });
    }
    listDir(params) {
        const { path, target, exclude } = params;
        const excludeWords = exclude ? exclude.join(' ') : '';
        const binPath = path_1.normalize(`${__dirname}/../bin/windows-find`);
        const args = [path, target, excludeWords];
        const child = child_process_1.spawn(binPath, args);
        return this.streamService.getStream(child);
    }
    deleteDir(path) {
        return this.windowsStrategyManager.deleteDir(path);
    }
}
exports.WindowsFilesService = WindowsFilesService;
