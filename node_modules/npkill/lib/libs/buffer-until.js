"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bufferUntil = void 0;
const rxjs_1 = require("rxjs");
class Buffer {
    constructor() {
        this.values = '';
    }
    append(value) {
        this.values += value;
    }
    reset() {
        this.values = '';
    }
}
function bufferUntil(filter, resetNotifier = rxjs_1.of()) {
    return function (source$) {
        let buffer = new Buffer();
        return new rxjs_1.Observable((observer) => {
            const resetNotifierSubscription = resetNotifier.subscribe(() => buffer.reset());
            source$.subscribe({
                next: (value) => {
                    buffer.append(value);
                    if (filter(buffer.values)) {
                        observer.next(buffer.values);
                        buffer.reset();
                    }
                },
                error: (err) => {
                    resetNotifierSubscription.unsubscribe();
                    observer.error(err);
                },
                complete: () => {
                    resetNotifierSubscription.unsubscribe();
                    observer.complete();
                },
            });
        });
    };
}
exports.bufferUntil = bufferUntil;
