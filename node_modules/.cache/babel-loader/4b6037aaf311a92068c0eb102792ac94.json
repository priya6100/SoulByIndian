{"ast":null,"code":"var _jsxFileName = \"E:\\\\redo final\\\\frontend-main\\\\src\\\\actions\\\\auth.action.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport axios from \"../helpers/axios\";\nimport { authConstants, cartConstants } from \"./constants\";\nimport React, { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const signup = user => {\n  return async dispatch => {\n    let res;\n\n    try {\n      dispatch({\n        type: authConstants.SIGNUP_REQUEST\n      });\n      res = await axios.post(`/signup`, user);\n\n      if (res.status === 201) {\n        dispatch({\n          type: authConstants.SIGNUP_SUCCESS\n        });\n        const {\n          token,\n          user\n        } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: authConstants.SIGNUP_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n      dispatch({\n        type: authConstants.SIGNUP_FAILURE,\n        payload: {\n          error: data.error\n        }\n      });\n    }\n  };\n};\nexport const passwordReset = user => {\n  return async dispatch => {\n    let res;\n\n    try {\n      dispatch({\n        type: authConstants.PASSRESET_REQUEST\n      });\n      res = await axios.post(`/forget-password`, user);\n\n      if (res.status === 201) {\n        dispatch({\n          type: authConstants.PASSRESET_SUCCESS\n        });\n        const {\n          token,\n          email\n        } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(email));\n        dispatch({\n          type: authConstants.PASSRESET_SUCCESS,\n          payload: {\n            token,\n            email\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: authConstants.PASSRESET_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n      dispatch({\n        type: authConstants.PASSRESET_FAILURE,\n        payload: {\n          error: data.error\n        }\n      });\n    }\n  };\n};\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUIEST\n    });\n    const res = await axios.post(`/signin`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    } // dispatch({\n    //     type : authConstants.LOGIN_REQUIEST,\n    //     payload: {\n    //         ...user\n    //     }\n    // });\n\n  };\n};\nexport const googleLogin = data => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUIEST\n    });\n    const {\n      token,\n      user\n    } = data;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    dispatch({\n      type: authConstants.LOGIN_SUCCESS,\n      payload: {\n        token,\n        user\n      }\n    });\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"failed to login\"\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUIEST\n    }); //   localStorage.removeItem('user');\n    //   localStorage.removeItem('token');\n\n    localStorage.clear();\n    dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n    dispatch({\n      type: cartConstants.RESET_CART\n    }); // const res = await axios.post(`/admin/signout`);\n    // if(res.status == 200){\n    //     localStorage.clear();\n    //     dispatch({\n    //         type: authConstants.LOGOUT_SUCCESS\n    //     });\n    // } else{\n    //     dispatch({\n    //         type: authConstants.LOGOUT_FAILURE,\n    //         payload: {error: res.data.error}\n    //     });\n    // }\n  };\n};\nconst clientId = \"800480683042-qdqo4a9hi5dboglr97e4tvmvab0er1lu.apps.googleusercontent.com\";\n\nfunction Login() {\n  _s();\n\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n  const onLoginSuccess = res => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n  };\n\n  const onLoginFailure = res => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showloginButton ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Sign In\",\n      onSuccess: onLoginSuccess,\n      onFailure: onLoginFailure,\n      cookiePolicy: \"single_host_origin\",\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : null, showlogoutButton ? /*#__PURE__*/_jsxDEV(GoogleLogout, {\n      clientId: clientId,\n      buttonText: \"Sign Out\",\n      onLogoutSuccess: onSignoutSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"0qpcF/pdimEOdkqrHEe7UjFXTM0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/redo final/frontend-main/src/actions/auth.action.js"],"names":["axios","authConstants","cartConstants","React","useState","GoogleLogin","GoogleLogout","signup","user","dispatch","res","type","SIGNUP_REQUEST","post","status","SIGNUP_SUCCESS","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","error","SIGNUP_FAILURE","response","passwordReset","PASSRESET_REQUEST","PASSRESET_SUCCESS","email","PASSRESET_FAILURE","login","LOGIN_REQUIEST","LOGIN_FAILURE","googleLogin","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUIEST","clear","LOGOUT_SUCCESS","RESET_CART","clientId","Login","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","onLoginSuccess","console","log","profileObj","onLoginFailure","onSignoutSuccess","alert"],"mappings":"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","sourcesContent":["/** @format */\n\nimport axios from \"../helpers/axios\";\nimport { authConstants, cartConstants } from \"./constants\";\n\nimport React, { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\n\nexport const signup = (user) => {\n  return async (dispatch) => {\n    let res;\n    try {\n      dispatch({ type: authConstants.SIGNUP_REQUEST });\n      res = await axios.post(`/signup`, user);\n      if (res.status === 201) {\n        dispatch({ type: authConstants.SIGNUP_SUCCESS });\n        const { token, user } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user,\n          },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({ type: authConstants.SIGNUP_FAILURE, payload: { error } });\n      }\n    } catch (error) {\n      const { data } = error.response;\n      dispatch({\n        type: authConstants.SIGNUP_FAILURE,\n        payload: { error: data.error },\n      });\n    }\n  };\n};\n\nexport const passwordReset = (user) => {\n  return async (dispatch) => {\n    let res;\n    try {\n      dispatch({ type: authConstants.PASSRESET_REQUEST });\n      res = await axios.post(`/forget-password`, user);\n      if (res.status === 201) {\n        dispatch({ type: authConstants.PASSRESET_SUCCESS });\n        const { token, email } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(email));\n        dispatch({\n          type: authConstants.PASSRESET_SUCCESS,\n          payload: {\n            token,\n            email,\n          },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({ type: authConstants.PASSRESET_FAILURE, payload: { error } });\n      }\n    } catch (error) {\n      const { data } = error.response;\n      dispatch({\n        type: authConstants.PASSRESET_FAILURE,\n        payload: { error: data.error },\n      });\n    }\n  };\n};\n\nexport const login = (user) => {\n  return async (dispatch) => {\n    dispatch({ type: authConstants.LOGIN_REQUIEST });\n\n    const res = await axios.post(`/signin`, {\n      ...user,\n    });\n\n    if (res.status === 200) {\n      const { token, user } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user,\n        },\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: { error: res.data.error },\n        });\n      }\n    }\n\n    // dispatch({\n\n    //     type : authConstants.LOGIN_REQUIEST,\n    //     payload: {\n    //         ...user\n    //     }\n\n    // });\n  };\n};\n\nexport const googleLogin = (data) => {\n  return async (dispatch) => {\n    dispatch({ type: authConstants.LOGIN_REQUIEST });\n\n    const { token, user } = data;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    dispatch({\n      type: authConstants.LOGIN_SUCCESS,\n      payload: {\n        token,\n        user,\n      },\n    });\n  };\n};\n\nexport const isUserLoggedIn = () => {\n  return async (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user,\n        },\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: { error: \"failed to login\" },\n      });\n    }\n  };\n};\n\nexport const signout = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUIEST,\n    });\n    //   localStorage.removeItem('user');\n    //   localStorage.removeItem('token');\n    localStorage.clear();\n    dispatch({\n      type: authConstants.LOGOUT_SUCCESS,\n    });\n    dispatch({ type: cartConstants.RESET_CART });\n    // const res = await axios.post(`/admin/signout`);\n\n    // if(res.status == 200){\n\n    //     localStorage.clear();\n    //     dispatch({\n    //         type: authConstants.LOGOUT_SUCCESS\n    //     });\n\n    // } else{\n\n    //     dispatch({\n    //         type: authConstants.LOGOUT_FAILURE,\n    //         payload: {error: res.data.error}\n    //     });\n\n    // }\n  };\n};\n\nconst clientId =\n  \"800480683042-qdqo4a9hi5dboglr97e4tvmvab0er1lu.apps.googleusercontent.com\";\n\nfunction Login() {\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n  const onLoginSuccess = (res) => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n  };\n\n  const onLoginFailure = (res) => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n  };\n\n  return (\n    <div>\n      {showloginButton ? (\n        <GoogleLogin\n          clientId={clientId}\n          buttonText=\"Sign In\"\n          onSuccess={onLoginSuccess}\n          onFailure={onLoginFailure}\n          cookiePolicy={\"single_host_origin\"}\n          isSignedIn={true}\n        />\n      ) : null}\n\n      {showlogoutButton ? (\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Sign Out\"\n          onLogoutSuccess={onSignoutSuccess}></GoogleLogout>\n      ) : null}\n    </div>\n  );\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}