{"ast":null,"code":"/** @format */\nimport { authConstants } from \"../actions/constants\";\nconst initialState = {\n  token: null,\n  user: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    picture: \"\"\n  },\n  authenticate: false,\n  authenticating: false,\n  loading: false,\n  error: null,\n  message: \"\"\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case authConstants.LOGIN_REQUIEST:\n      state = { ...state,\n        authenticating: true\n      };\n      break;\n\n    case authConstants.LOGIN_SUCCESS:\n      state = { ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        authenticate: true,\n        authenticating: false\n      };\n      break;\n\n    case authConstants.LOGOUT_REQUIEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case authConstants.LOGOUT_SUCCESS:\n      state = { ...initialState\n      };\n      break;\n\n    case authConstants.LOGOUT_FAILURE:\n      state = { ...state,\n        error: action.payload.error,\n        loading: false\n      };\n      break;\n\n    case authConstants.PASSRESET_REQUIEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case authConstants.PASSRESET_SUCCESS:\n      state = { ...initialState\n      };\n      break;\n\n    case authConstants.PASSRESET_FAILURE:\n      state = { ...state,\n        error: action.payload.error,\n        loading: false\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["E:/redo final/frontend-main/src/reducers/auth.reducer.js"],"names":["authConstants","initialState","token","user","firstName","lastName","email","picture","authenticate","authenticating","loading","error","message","state","action","type","LOGIN_REQUIEST","LOGIN_SUCCESS","payload","LOGOUT_REQUIEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","PASSRESET_REQUIEST","PASSRESET_SUCCESS","PASSRESET_FAILURE"],"mappings":"AAAA;AAEA,SAASA,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,OAAO,EAAE;AAJL,GAFa;AAQnBC,EAAAA,YAAY,EAAE,KARK;AASnBC,EAAAA,cAAc,EAAE,KATG;AAUnBC,EAAAA,OAAO,EAAE,KAVU;AAWnBC,EAAAA,KAAK,EAAE,IAXY;AAYnBC,EAAAA,OAAO,EAAE;AAZU,CAArB;AAeA,gBAAe,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,aAAa,CAACgB,cAAnB;AACEH,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENJ,QAAAA,cAAc,EAAE;AAFV,OAAR;AAIA;;AACF,SAAKT,aAAa,CAACiB,aAAnB;AACEJ,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENV,QAAAA,IAAI,EAAEW,MAAM,CAACI,OAAP,CAAef,IAFf;AAGND,QAAAA,KAAK,EAAEY,MAAM,CAACI,OAAP,CAAehB,KAHhB;AAINM,QAAAA,YAAY,EAAE,IAJR;AAKNC,QAAAA,cAAc,EAAE;AALV,OAAR;AAOA;;AACF,SAAKT,aAAa,CAACmB,eAAnB;AACEN,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAR;AAIA;;AACF,SAAKV,aAAa,CAACoB,cAAnB;AACEP,MAAAA,KAAK,GAAG,EACN,GAAGZ;AADG,OAAR;AAGA;;AACF,SAAKD,aAAa,CAACqB,cAAnB;AACER,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENF,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAAP,CAAeP,KAFhB;AAGND,QAAAA,OAAO,EAAE;AAHH,OAAR;AAKA;;AACF,SAAKV,aAAa,CAACsB,kBAAnB;AACET,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAR;AAIA;;AACF,SAAKV,aAAa,CAACuB,iBAAnB;AACEV,MAAAA,KAAK,GAAG,EACN,GAAGZ;AADG,OAAR;AAGA;;AACF,SAAKD,aAAa,CAACwB,iBAAnB;AACEX,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENF,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAAP,CAAeP,KAFhB;AAGND,QAAAA,OAAO,EAAE;AAHH,OAAR;AAKA;AAnDJ;;AAsDA,SAAOG,KAAP;AACD,CAxDD","sourcesContent":["/** @format */\n\nimport { authConstants } from \"../actions/constants\";\n\nconst initialState = {\n  token: null,\n  user: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    picture: \"\",\n  },\n  authenticate: false,\n  authenticating: false,\n  loading: false,\n  error: null,\n  message: \"\",\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case authConstants.LOGIN_REQUIEST:\n      state = {\n        ...state,\n        authenticating: true,\n      };\n      break;\n    case authConstants.LOGIN_SUCCESS:\n      state = {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        authenticate: true,\n        authenticating: false,\n      };\n      break;\n    case authConstants.LOGOUT_REQUIEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case authConstants.LOGOUT_SUCCESS:\n      state = {\n        ...initialState,\n      };\n      break;\n    case authConstants.LOGOUT_FAILURE:\n      state = {\n        ...state,\n        error: action.payload.error,\n        loading: false,\n      };\n      break;\n    case authConstants.PASSRESET_REQUIEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case authConstants.PASSRESET_SUCCESS:\n      state = {\n        ...initialState,\n      };\n      break;\n    case authConstants.PASSRESET_FAILURE:\n      state = {\n        ...state,\n        error: action.payload.error,\n        loading: false,\n      };\n      break;\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}