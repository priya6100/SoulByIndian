{"ast":null,"code":"/** @format */\nimport axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\nexport const getAllProduct = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/products`);\n      let product;\n      let images;\n\n      if (res.status === 200) {\n        product = res.data.Products;\n        images = res.data.Products.map(e => typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\");\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n          payload: {\n            product,\n            images\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst priceFilter = (filter, product) => {\n  let products = [];\n\n  if (!filter.length) {\n    products = [...product.filteredItems];\n  } else {\n    filter.map(filter => {\n      switch (filter) {\n        case \"priceOption1\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.price <= 499)];\n            break;\n          }\n\n        case \"priceOption2\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.price >= 500 && product.price <= 999)];\n            console.log(products);\n            break;\n          }\n\n        case \"priceOption3\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.price >= 1000 && product.price <= 4999)];\n            break;\n          }\n\n        case \"priceOption4\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.price >= 5000 && product.price <= 9999)];\n            break;\n          }\n\n        case \"priceOption5\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.price >= 10000 && product.price <= 49999)];\n            break;\n          }\n\n        case \"priceOption6\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.price >= 50000 && product.price <= 74999)];\n            break;\n          }\n\n        default:\n          break;\n      }\n    });\n  }\n\n  product.filteredItems = products;\n  product.images = products.map(e => typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\");\n  return product;\n};\n\nconst sizeFilter = (filter, product) => {\n  let products = []; // const productFiltered = product.filteredItems.map((prod) => prod);\n  // console.log(productFiltered);\n\n  if (!filter.length) {\n    products = [...product.filteredItems];\n  } else {\n    filter.map(filter => {\n      switch (filter) {\n        case \"S\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.size.S_quantity > 0)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"M\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.size.M_quantity > 0)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"X\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.size.X_quantity > 0)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"XL\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.size.XL_quantity > 0)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"XXL\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.size.X2L_quantity > 0)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"XXXL\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.size.X3L_quantity > 0)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        default:\n          break;\n      }\n    });\n  }\n\n  product.filteredItems = products;\n  product.images = products.map(e => typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\");\n  return product;\n};\n\nconst colorFilter = (filter, product) => {\n  let products = [];\n\n  if (!filter.length) {\n    products = [...product.filteredItems];\n  } else {\n    filter.map(filter => {\n      switch (filter) {\n        case \"green\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"green\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"blue\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"blue\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"white\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"white\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"red\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"green\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"black\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"black\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"purple\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"purple\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"yellow\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"yellow\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"orange\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"orange\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"grey\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"grey\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        case \"brown\":\n          {\n            products = [...products, ...product.filteredItems.filter(product => product.color.indexOf(\"brown\") > -1)];\n            const temp_prod = products;\n            products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(JSON.parse);\n            break;\n          }\n\n        default:\n          break;\n      }\n    });\n  }\n\n  product.filteredItems = products;\n  product.images = products.map(e => typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\");\n  return product;\n};\n\nconst filteredProducts = (filter, product) => {\n  const arrPriceFilter = [];\n  const arrSizeFilter = [];\n  const arrColorFilter = [];\n  filter.map(filter => {\n    switch (filter) {\n      case \"green\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"blue\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"white\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"red\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"black\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"purple\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"yellow\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"orange\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"grey\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"brown\":\n        arrColorFilter.push(filter);\n        break;\n\n      case \"S\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"M\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"X\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"XL\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"XXL\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"XXXL\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"priceOption1\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption2\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption3\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption4\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption5\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption6\":\n        arrPriceFilter.push(filter);\n        break;\n\n      default:\n        break;\n    }\n  });\n  product.filteredItems = product.products;\n  product.images = product.products.map(e => typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\");\n  const product1 = sizeFilter(arrSizeFilter, product);\n  const product2 = colorFilter(arrColorFilter, product1);\n  const product3 = priceFilter(arrPriceFilter, product2); // product =\n  // console.log(product);\n\n  return product3;\n};\n\nexport const filterProducts = (filter, product) => async dispatch => {\n  product = filteredProducts(filter, product);\n  const filteredItems = product.filteredItems;\n  const products = product.products;\n  const images = product.filteredItems.map(e => typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\");\n  return dispatch({\n    type: productConstants.FILTER_PRODUCTS_BY_PRICE,\n    payload: {\n      filteredItems,\n      products,\n      images\n    }\n  });\n};\nexport const sortingProducts = (sorting, product) => async dispatch => {\n  const filteredItems = product.filteredItems;\n  sorting === \"Price: Low to High\" ? filteredItems.sort((a, b) => a.price - b.price) : filteredItems.sort((a, b) => b.price - a.price);\n  console.log(filteredItems);\n  return dispatch({\n    type: productConstants.SORTING_PRODUCTS_BY_PRICE,\n    payload: {\n      filteredItems,\n      products: product.products\n    }\n  });\n};\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axios.get(`/products/${slug}`);\n\n    if (res.status === 200) {\n      console.log(res.data);\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    } else {}\n  };\n};\nexport const getProductPage = payload => {\n  return async dispatch => {\n    try {\n      const {\n        cid,\n        type\n      } = payload.params;\n      const res = await axios.get(`/page/${cid}/${type}`);\n      dispatch({\n        type: productConstants.GET_PRODUCT_PAGE_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          page\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: {\n            page\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getProductDetailsById = payload => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.GET_PRODUCTS_DETAILS_BY_ID_REQUEST\n    });\n    let res;\n\n    try {\n      const {\n        productId\n      } = payload.params;\n      res = await axios.get(`/product/${productId}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCTS_DETAILS_BY_ID_SUCCESS,\n        payload: {\n          productDetails: res.data.product\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productConstants.GET_PRODUCTS_DETAILS_BY_ID_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["E:/redo final/frontend-main/src/actions/product.action.js"],"names":["axios","productConstants","getAllProduct","dispatch","res","get","product","images","status","data","Products","map","e","productPictures","type","GET_ALL_PRODUCTS_SUCCESS","payload","error","GET_ALL_PRODUCTS_FAILURE","console","log","priceFilter","filter","products","length","filteredItems","price","sizeFilter","size","S_quantity","temp_prod","Array","from","Set","JSON","stringify","parse","M_quantity","X_quantity","XL_quantity","X2L_quantity","X3L_quantity","colorFilter","color","indexOf","filteredProducts","arrPriceFilter","arrSizeFilter","arrColorFilter","push","product1","product2","product3","filterProducts","FILTER_PRODUCTS_BY_PRICE","sortingProducts","sorting","sort","a","b","SORTING_PRODUCTS_BY_PRICE","getProductsBySlug","slug","GET_PRODUCTS_BY_SLUG","getProductPage","cid","params","GET_PRODUCT_PAGE_REQUEST","page","GET_PRODUCT_PAGE_SUCCESS","GET_PRODUCT_PAGE_FAILURE","getProductDetailsById","GET_PRODUCTS_DETAILS_BY_ID_REQUEST","productId","GET_PRODUCTS_DETAILS_BY_ID_SUCCESS","productDetails","GET_PRODUCTS_DETAILS_BY_ID_FAILURE"],"mappings":"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","sourcesContent":["/** @format */\n\nimport axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\n\nexport const getAllProduct = () => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(`/products`);\n      let product;\n      let images;\n      if (res.status === 200) {\n        product = res.data.Products;\n\n        images = res.data.Products.map((e) =>\n          typeof e.productPictures[0] !== \"undefined\"\n            ? e.productPictures[0]\n            : \"\"\n        );\n\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n          payload: { product, images },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst priceFilter = (filter, product) => {\n  let products = [];\n\n  if (!filter.length) {\n    products = [...product.filteredItems];\n  } else {\n    filter.map((filter) => {\n      switch (filter) {\n        case \"priceOption1\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter((product) => product.price <= 499),\n          ];\n\n          break;\n        }\n        case \"priceOption2\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.price >= 500 && product.price <= 999\n            ),\n          ];\n          console.log(products);\n\n          break;\n        }\n        case \"priceOption3\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.price >= 1000 && product.price <= 4999\n            ),\n          ];\n\n          break;\n        }\n        case \"priceOption4\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.price >= 5000 && product.price <= 9999\n            ),\n          ];\n\n          break;\n        }\n        case \"priceOption5\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.price >= 10000 && product.price <= 49999\n            ),\n          ];\n\n          break;\n        }\n        case \"priceOption6\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.price >= 50000 && product.price <= 74999\n            ),\n          ];\n\n          break;\n        }\n        default:\n          break;\n      }\n    });\n  }\n\n  product.filteredItems = products;\n  product.images = products.map((e) =>\n    typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\"\n  );\n\n  return product;\n};\n\nconst sizeFilter = (filter, product) => {\n  let products = [];\n  // const productFiltered = product.filteredItems.map((prod) => prod);\n\n  // console.log(productFiltered);\n  if (!filter.length) {\n    products = [...product.filteredItems];\n  } else {\n    filter.map((filter) => {\n      switch (filter) {\n        case \"S\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.size.S_quantity > 0\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        case \"M\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.size.M_quantity > 0\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        case \"X\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.size.X_quantity > 0\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        case \"XL\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.size.XL_quantity > 0\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        case \"XXL\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.size.X2L_quantity > 0\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        case \"XXXL\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.size.X3L_quantity > 0\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        default:\n          break;\n      }\n    });\n  }\n\n  product.filteredItems = products;\n  product.images = products.map((e) =>\n    typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\"\n  );\n\n  return product;\n};\n\nconst colorFilter = (filter, product) => {\n  let products = [];\n  if (!filter.length) {\n    products = [...product.filteredItems];\n  } else {\n    filter.map((filter) => {\n      switch (filter) {\n        case \"green\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"green\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n\n        case \"blue\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"blue\") > -1\n            ),\n          ];\n\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        case \"white\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"white\") > -1\n            ),\n          ];\n\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n        case \"red\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"green\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n\n          break;\n        }\n        case \"black\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"black\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n\n          break;\n        }\n        case \"purple\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"purple\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n\n          break;\n        }\n        case \"yellow\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"yellow\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n\n          break;\n        }\n        case \"orange\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"orange\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n\n          break;\n        }\n        case \"grey\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"grey\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n\n          break;\n        }\n        case \"brown\": {\n          products = [\n            ...products,\n            ...product.filteredItems.filter(\n              (product) => product.color.indexOf(\"brown\") > -1\n            ),\n          ];\n          const temp_prod = products;\n          products = Array.from(new Set(temp_prod.map(JSON.stringify))).map(\n            JSON.parse\n          );\n          break;\n        }\n\n        default:\n          break;\n      }\n    });\n  }\n\n  product.filteredItems = products;\n  product.images = products.map((e) =>\n    typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\"\n  );\n\n  return product;\n};\n\nconst filteredProducts = (filter, product) => {\n  const arrPriceFilter = [];\n  const arrSizeFilter = [];\n  const arrColorFilter = [];\n  filter.map((filter) => {\n    switch (filter) {\n      case \"green\":\n        arrColorFilter.push(filter);\n        break;\n      case \"blue\":\n        arrColorFilter.push(filter);\n        break;\n      case \"white\":\n        arrColorFilter.push(filter);\n        break;\n      case \"red\":\n        arrColorFilter.push(filter);\n        break;\n      case \"black\":\n        arrColorFilter.push(filter);\n        break;\n      case \"purple\":\n        arrColorFilter.push(filter);\n        break;\n      case \"yellow\":\n        arrColorFilter.push(filter);\n        break;\n      case \"orange\":\n        arrColorFilter.push(filter);\n        break;\n      case \"grey\":\n        arrColorFilter.push(filter);\n        break;\n      case \"brown\":\n        arrColorFilter.push(filter);\n        break;\n      case \"S\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"M\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"X\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"XL\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"XXL\":\n        arrSizeFilter.push(filter);\n        break;\n\n      case \"XXXL\":\n        arrSizeFilter.push(filter);\n        break;\n      case \"priceOption1\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption2\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption3\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption4\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption5\":\n        arrPriceFilter.push(filter);\n        break;\n\n      case \"priceOption6\":\n        arrPriceFilter.push(filter);\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  product.filteredItems = product.products;\n  product.images = product.products.map((e) =>\n    typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\"\n  );\n\n  const product1 = sizeFilter(arrSizeFilter, product);\n  const product2 = colorFilter(arrColorFilter, product1);\n  const product3 = priceFilter(arrPriceFilter, product2);\n  // product =\n  // console.log(product);\n\n  return product3;\n};\n\nexport const filterProducts = (filter, product) => async (dispatch) => {\n  product = filteredProducts(filter, product);\n  const filteredItems = product.filteredItems;\n  const products = product.products;\n  const images = product.filteredItems.map((e) =>\n    typeof e.productPictures[0] !== \"undefined\" ? e.productPictures[0] : \"\"\n  );\n  return dispatch({\n    type: productConstants.FILTER_PRODUCTS_BY_PRICE,\n    payload: {\n      filteredItems,\n      products,\n      images,\n    },\n  });\n};\n\nexport const sortingProducts = (sorting, product) => async (dispatch) => {\n  const filteredItems = product.filteredItems;\n  sorting === \"Price: Low to High\"\n    ? filteredItems.sort((a, b) => a.price - b.price)\n    : filteredItems.sort((a, b) => b.price - a.price);\n  console.log(filteredItems);\n  return dispatch({\n    type: productConstants.SORTING_PRODUCTS_BY_PRICE,\n    payload: {\n      filteredItems,\n      products: product.products,\n    },\n  });\n};\n\nexport const getProductsBySlug = (slug) => {\n  return async (dispatch) => {\n    const res = await axios.get(`/products/${slug}`);\n    if (res.status === 200) {\n      console.log(res.data);\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data,\n      });\n    } else {\n    }\n  };\n};\n\nexport const getProductPage = (payload) => {\n  return async (dispatch) => {\n    try {\n      const { cid, type } = payload.params;\n      const res = await axios.get(`/page/${cid}/${type}`);\n      dispatch({ type: productConstants.GET_PRODUCT_PAGE_REQUEST });\n      if (res.status === 200) {\n        const { page } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: { page },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const getProductDetailsById = (payload) => {\n  return async (dispatch) => {\n    dispatch({ type: productConstants.GET_PRODUCTS_DETAILS_BY_ID_REQUEST });\n    let res;\n    try {\n      const { productId } = payload.params;\n      res = await axios.get(`/product/${productId}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCTS_DETAILS_BY_ID_SUCCESS,\n        payload: { productDetails: res.data.product },\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productConstants.GET_PRODUCTS_DETAILS_BY_ID_FAILURE,\n        payload: { error: res.data.error },\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}