{"ast":null,"code":"var _jsxFileName = \"E:\\\\redo final\\\\frontend-main\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport axios from \"axios\";\nimport { googleLogin } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"800480683042-qdqo4a9hi5dboglr97e4tvmvab0er1lu.apps.googleusercontent.com\";\n\nfunction Login(props) {\n  _s();\n\n  // const responseSuccessGoogle = (response) => {\n  //   console.log(response);\n  //   axios({\n  //     method: \"POST\",\n  //     url: \"http://localhost:7000/api/googlelogin\",\n  //     data: { tokenId: response.tokenId },\n  //   }).then((response) => {\n  //     console.log(\"Google login success\", response);\n  //   });\n  // };\n  const dispatch = useDispatch();\n\n  const responseErrorGoogle = response => {};\n\n  const [showloginButton, setShowloginButton] = useState(true);\n\n  const onLoginSuccess = res => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:7000/api/googlelogin\",\n      data: {\n        tokenId: res.tokenId,\n        profileInform: res.profileObj\n      }\n    }).then(res => {\n      console.log(\"Google login success\", res);\n      const {\n        token,\n        user,\n        message\n      } = res.data;\n      console.log(message);\n      dispatch(googleLogin({\n        token,\n        user\n      }));\n    });\n  };\n\n  const onLoginFailure = res => {};\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...props.style\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      style: {\n        width: \"100%\",\n        borderRadius: \"25px\"\n      },\n      clientId: clientId,\n      buttonText: props.buttonText,\n      onSuccess: onLoginSuccess,\n      onFailure: responseErrorGoogle,\n      cookiePolicy: \"single_host_origin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"gCqjHPNJVF+8+u5cpq/Hjrnu3zs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/redo final/frontend-main/src/components/Login.js"],"names":["React","useState","useDispatch","GoogleLogin","GoogleLogout","axios","googleLogin","clientId","Login","props","dispatch","responseErrorGoogle","response","showloginButton","setShowloginButton","onLoginSuccess","res","method","url","data","tokenId","profileInform","profileObj","then","console","log","token","user","message","onLoginFailure","onSignoutSuccess","alert","clear","style","width","borderRadius","buttonText"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,QAAQ,GACZ,0EADF;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,mBAAmB,GAAIC,QAAD,IAAc,CAAE,CAA5C;;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,IAAD,CAAtD;;AAEA,QAAMc,cAAc,GAAIC,GAAD,IAAS;AAC9BX,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,uCAFD;AAGJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEJ,GAAG,CAACI,OAAf;AAAwBC,QAAAA,aAAa,EAAEL,GAAG,CAACM;AAA3C;AAHF,KAAD,CAAL,CAIGC,IAJH,CAISP,GAAD,IAAS;AACfQ,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCT,GAApC;AACA,YAAM;AAAEU,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,UAA2BZ,GAAG,CAACG,IAArC;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAlB,MAAAA,QAAQ,CAACJ,WAAW,CAAC;AAAEoB,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAAZ,CAAR;AACD,KAVD;AAWD,GAZD;;AAcA,QAAME,cAAc,GAAIb,GAAD,IAAS,CAAE,CAAlC;;AAEA,QAAMc,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,KAAK,CAAC,uCAAD,CAAL;AACAP,IAAAA,OAAO,CAACQ,KAAR;AACAlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE,EAAE,GAAGL,KAAK,CAACwB;AAAX,KAAZ;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,YAAY,EAAE;AAA/B,OADT;AAEE,MAAA,QAAQ,EAAE5B,QAFZ;AAGE,MAAA,UAAU,EAAEE,KAAK,CAAC2B,UAHpB;AAIE,MAAA,SAAS,EAAErB,cAJb;AAKE,MAAA,SAAS,EAAEJ,mBALb;AAME,MAAA,YAAY,EAAE;AANhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjDQH,K;UAWUN,W;;;KAXVM,K;AAkDT,eAAeA,KAAf","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport axios from \"axios\";\nimport { googleLogin } from \"../actions\";\n\nconst clientId =\n  \"800480683042-qdqo4a9hi5dboglr97e4tvmvab0er1lu.apps.googleusercontent.com\";\n\nfunction Login(props) {\n  // const responseSuccessGoogle = (response) => {\n  //   console.log(response);\n  //   axios({\n  //     method: \"POST\",\n  //     url: \"http://localhost:7000/api/googlelogin\",\n  //     data: { tokenId: response.tokenId },\n  //   }).then((response) => {\n  //     console.log(\"Google login success\", response);\n  //   });\n  // };\n  const dispatch = useDispatch();\n  const responseErrorGoogle = (response) => {};\n  const [showloginButton, setShowloginButton] = useState(true);\n\n  const onLoginSuccess = (res) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:7000/api/googlelogin\",\n      data: { tokenId: res.tokenId, profileInform: res.profileObj },\n    }).then((res) => {\n      console.log(\"Google login success\", res);\n      const { token, user, message } = res.data;\n\n      console.log(message);\n      dispatch(googleLogin({ token, user }));\n    });\n  };\n\n  const onLoginFailure = (res) => {};\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n  };\n\n  return (\n    <div style={{ ...props.style }}>\n      <GoogleLogin\n        style={{ width: \"100%\", borderRadius: \"25px\" }}\n        clientId={clientId}\n        buttonText={props.buttonText}\n        onSuccess={onLoginSuccess}\n        onFailure={responseErrorGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </div>\n  );\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}