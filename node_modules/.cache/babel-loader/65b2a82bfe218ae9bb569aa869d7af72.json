{"ast":null,"code":"/** @format */\nimport axios from \"../helpers/axios\";\nimport { cartConstants, userConstants } from \"./constants\";\nimport store from \"../store\";\nexport const getAddress = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/user/getaddress`);\n      dispatch({\n        type: userConstants.GET_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          userAddress: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addAddress = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/user/address/create`, {\n        payload\n      });\n      dispatch({\n        type: userConstants.ADD_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          address: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}; /////////////////////\n\nexport const removeAddressList = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: userConstants.REMOVE_USER_ADDRESS_REQUEST\n      });\n      const res = await axios.post(`/user/address/removeAddress`, {\n        payload\n      });\n\n      if (res.status === 202) {\n        dispatch({\n          type: userConstants.REMOVE_USER_ADDRESS_SUCCESS\n        });\n        dispatch(getAddress());\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.REMOVE_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updatedAddress = () => {\n  return async dispatch => {\n    const {\n      auth\n    } = store.getState();\n    let address = localStorage.getItem(\"address\") ? JSON.parse(localStorage.getItem(\"address\")) : null;\n    console.log(\"upppppppppp\");\n\n    if (auth.authenticate) {\n      localStorage.removeItem(\"address\"); // dispatch(getWishlistItems());\n\n      if (address) {\n        const payload = {\n          wishlistItems: Object.keys(address).map((key, index) => {\n            return {\n              product: address[key]._id,\n              quantity: address[key].qty,\n              name: address[key].name,\n              price: address[key].price,\n              img: address[key].img,\n              size: address[key].size,\n              color: address[key].color\n            };\n          })\n        };\n\n        if (Object.keys(address).length > 0) {\n          const res = await axios.post(`/user/wishlist/addtowishlist`, payload);\n\n          if (res.status === 201) {\n            dispatch(getAddress());\n          }\n        }\n      }\n    } else {\n      if (address) {\n        dispatch({\n          type: userConstants.ADD_TO_WISHLIST_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      }\n    }\n  };\n}; //////////////////////\n\nexport const addOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/addOrder`, payload);\n      dispatch({\n        type: userConstants.ADD_USER_ORDER_REQUEST\n      });\n\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          order\n        } = res.data;\n        dispatch({\n          type: cartConstants.RESET_CART\n        });\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_SUCCESS,\n          payload: {\n            order\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const cancleOrder = payload => {\n  return async dispatch => {\n    dispatch({\n      type: userConstants.CANCLE_USER_ORDER_REQUIEST\n    });\n\n    try {\n      const res = await axios.post(\"/cancleOrderDetails\", payload);\n\n      if (res.status === 201) {\n        const {\n          order\n        } = res.data;\n        dispatch(getOrder(payload));\n        dispatch({\n          type: userConstants.CANCLE_USER_ORDER_SUCCESS,\n          payload: {\n            order\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.CANCLE_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getOrders = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/getOrders`);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_REQUEST\n      });\n\n      if (res.status === 200) {\n        console.log(res);\n        const {\n          orders\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_SUCCESS,\n          payload: {\n            orders\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/getOrder`, payload);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_DETAILS_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          order,\n          hasItem\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\n          payload: {\n            order,\n            hasItem\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getOrdersByPin = payload => {\n  return async dispatch => {\n    const {\n      pinCode\n    } = payload;\n\n    try {\n      const res = await axios.post(\"/getOrdersByPin\", {\n        pinCode\n      });\n      console.log(res);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_BY_PIN_REQUEST\n      });\n\n      if (res.status === 200) {\n        dispatch({\n          type: userConstants.GET_USER_ORDER_BY_PIN_SUCCESS,\n          payload: {\n            order: res.data.order\n          }\n        });\n      }\n\n      if (res.status === 400) {\n        dispatch({\n          type: userConstants.GET_USER_ORDER_BY_PIN_FAILED\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["E:/redo final/frontend-main/src/actions/user.action.js"],"names":["axios","cartConstants","userConstants","store","getAddress","dispatch","res","post","type","GET_USER_ADDRESS_REQUEST","status","userAddress","address","data","GET_USER_ADDRESS_SUCCESS","payload","error","GET_USER_ADDRESS_FAILURE","console","log","addAddress","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_SUCCESS","ADD_USER_ADDRESS_FAILURE","removeAddressList","REMOVE_USER_ADDRESS_REQUEST","REMOVE_USER_ADDRESS_SUCCESS","REMOVE_USER_ADDRESS_FAILURE","updatedAddress","auth","getState","localStorage","getItem","JSON","parse","authenticate","removeItem","wishlistItems","Object","keys","map","key","index","product","_id","quantity","qty","name","price","img","size","color","length","ADD_TO_WISHLIST_SUCCESS","addOrder","ADD_USER_ORDER_REQUEST","order","RESET_CART","ADD_USER_ORDER_SUCCESS","ADD_USER_ORDER_FAILURE","cancleOrder","CANCLE_USER_ORDER_REQUIEST","getOrder","CANCLE_USER_ORDER_SUCCESS","CANCLE_USER_ORDER_FAILURE","getOrders","get","GET_USER_ORDER_REQUEST","orders","GET_USER_ORDER_SUCCESS","GET_USER_ORDER_FAILURE","GET_USER_ORDER_DETAILS_REQUEST","hasItem","GET_USER_ORDER_DETAILS_SUCCESS","GET_USER_ORDER_DETAILS_FAILURE","getOrdersByPin","pinCode","GET_USER_ORDER_BY_PIN_REQUEST","GET_USER_ORDER_BY_PIN_SUCCESS","GET_USER_ORDER_BY_PIN_FAILED"],"mappings":"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","sourcesContent":["/** @format */\n\nimport axios from \"../helpers/axios\";\nimport { cartConstants, userConstants } from \"./constants\";\nimport store from \"../store\";\n\n\n\n\n\nexport const getAddress = () => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.post(`/user/getaddress`);\n      dispatch({ type: userConstants.GET_USER_ADDRESS_REQUEST });\n      if (res.status === 200) {\n        const {\n          userAddress: { address },\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_SUCCESS,\n          payload: { address },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addAddress = (payload) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.post(`/user/address/create`, { payload });\n      dispatch({ type: userConstants.ADD_USER_ADDRESS_REQUEST });\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          address: { address },\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          payload: { address },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n/////////////////////\nexport const removeAddressList = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: userConstants.REMOVE_USER_ADDRESS_REQUEST });\n      const res = await axios.post(`/user/address/removeAddress`, { payload });\n      if (res.status === 202) {\n\n        dispatch({ type: userConstants.REMOVE_USER_ADDRESS_SUCCESS });\n        dispatch(getAddress());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: userConstants.REMOVE_USER_ADDRESS_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updatedAddress = () => {\n  return async (dispatch) => {\n    const { auth } = store.getState();\n    let address = localStorage.getItem(\"address\")\n      ? JSON.parse(localStorage.getItem(\"address\"))\n      : null;\n\n    console.log(\"upppppppppp\");\n\n    if (auth.authenticate) {\n      localStorage.removeItem(\"address\");\n      // dispatch(getWishlistItems());\n      if (address) {\n        const payload = {\n          wishlistItems: Object.keys(address).map((key, index) => {\n            return {\n              product: address[key]._id,\n              quantity: address[key].qty,\n              name: address[key].name,\n              price: address[key].price,\n              img: address[key].img,\n              size: address[key].size,\n              color: address[key].color,\n            };\n          }),\n        };\n        if (Object.keys(address).length > 0) {\n          const res = await axios.post(`/user/wishlist/addtowishlist`, payload);\n          if (res.status === 201) {\n            dispatch(getAddress());\n          }\n        }\n      }\n    } else {\n      if (address) {\n        dispatch({\n          type: userConstants.ADD_TO_WISHLIST_SUCCESS,\n          payload: { address },\n        });\n      }\n    }\n  };\n};\n\n//////////////////////\nexport const addOrder = (payload) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.post(`/addOrder`, payload);\n      dispatch({ type: userConstants.ADD_USER_ORDER_REQUEST });\n      if (res.status === 201) {\n        console.log(res);\n        const { order } = res.data;\n        dispatch({\n          type: cartConstants.RESET_CART,\n        });\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_SUCCESS,\n          payload: { order },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const cancleOrder = (payload) => {\n  return async (dispatch) => {\n    dispatch({ type: userConstants.CANCLE_USER_ORDER_REQUIEST });\n    try {\n      const res = await axios.post(\"/cancleOrderDetails\", payload);\n      if (res.status === 201) {\n        const { order } = res.data;\n        dispatch(getOrder(payload));\n        dispatch({\n          type: userConstants.CANCLE_USER_ORDER_SUCCESS,\n          payload: { order },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: userConstants.CANCLE_USER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const getOrders = () => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(`/getOrders`);\n      dispatch({ type: userConstants.GET_USER_ORDER_REQUEST });\n      if (res.status === 200) {\n        console.log(res);\n        const { orders } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_SUCCESS,\n          payload: { orders },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const getOrder = (payload) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.post(`/getOrder`, payload);\n      dispatch({ type: userConstants.GET_USER_ORDER_DETAILS_REQUEST });\n      if (res.status === 200) {\n        const { order, hasItem } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\n          payload: { order, hasItem },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const getOrdersByPin = (payload) => {\n  return async (dispatch) => {\n    const { pinCode } = payload;\n    try {\n      const res = await axios.post(\"/getOrdersByPin\", { pinCode });\n      console.log(res);\n      dispatch({ type: userConstants.GET_USER_ORDER_BY_PIN_REQUEST });\n      if (res.status === 200) {\n        dispatch({\n          type: userConstants.GET_USER_ORDER_BY_PIN_SUCCESS,\n          payload: { order: res.data.order },\n        });\n      }\n\n      if (res.status === 400) {\n        dispatch({\n          type: userConstants.GET_USER_ORDER_BY_PIN_FAILED,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}