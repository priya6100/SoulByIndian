{"ast":null,"code":"\"use strict\";\n/*\n * DOCS: https://razorpay.com/docs/subscriptions/api/\n */\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Promise = require(\"promise\"),\n    _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeNotes = _require.normalizeNotes;\n\nmodule.exports = function subscriptionsApi(api) {\n  var BASE_URL = \"/subscriptions\",\n      MISSING_ID_ERROR = \"Subscription ID is mandatory\";\n  return {\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n       * Creates a Subscription\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL,\n          notes = params.notes,\n          rest = _objectWithoutProperties(params, [\"notes\"]),\n          data = Object.assign(rest, normalizeNotes(notes));\n\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    },\n    fetch: function fetch(subscriptionId, callback) {\n      /*\n       * Fetch a Subscription given Subcription ID\n       *\n       * @param {String} subscriptionId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n      if (!subscriptionId) {\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      var url = BASE_URL + \"/\" + subscriptionId;\n      return api.get({\n        url: url\n      }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n       * Get all Subscriptions\n       *\n       * @param {Object} params\n       * @param {Funtion} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL;\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    cancel: function cancel(subscriptionId) {\n      var cancelAtCycleEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var callback = arguments[2];\n      /*\n       * Cancel a subscription given id and optional cancelAtCycleEnd\n       *\n       * @param {String} subscription\n       * @param {Boolean} cancelAtCycleEnd\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL + \"/\" + subscriptionId + \"/cancel\";\n\n      if (!subscriptionId) {\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      if (typeof cancelAtCycleEnd !== \"boolean\") {\n        return Promise.reject(\"The second parameter, Cancel at the end of cycle\" + \" should be a Boolean\");\n      }\n\n      return api.post(_extends({\n        url: url\n      }, cancelAtCycleEnd && {\n        data: {\n          cancel_at_cycle_end: 1\n        }\n      }), callback);\n    },\n    createAddon: function createAddon(subscriptionId, params, callback) {\n      /*\n       * Creates addOn for a given subscription\n       *\n       * @param {String} subscriptionId\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n      var url = BASE_URL + \"/\" + subscriptionId + \"/addons\";\n\n      if (!subscriptionId) {\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      return api.post({\n        url: url,\n        data: _extends({}, params)\n      }, callback);\n    }\n  };\n};","map":{"version":3,"sources":["E:/redo final/frontend-main/node_modules/razorpay/dist/resources/subscriptions.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","Promise","require","_require","normalizeDate","normalizeNotes","module","exports","subscriptionsApi","api","BASE_URL","MISSING_ID_ERROR","create","params","undefined","callback","url","notes","rest","data","post","fetch","subscriptionId","reject","get","all","from","to","count","skip","Number","cancel","cancelAtCycleEnd","cancel_at_cycle_end","createAddon"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/*\n * DOCS: https://razorpay.com/docs/subscriptions/api/\n */\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Promise = require(\"promise\"),\n    _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeNotes = _require.normalizeNotes;\n\n\nmodule.exports = function subscriptionsApi(api) {\n\n  var BASE_URL = \"/subscriptions\",\n      MISSING_ID_ERROR = \"Subscription ID is mandatory\";\n\n  return {\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Creates a Subscription\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL,\n          notes = params.notes,\n          rest = _objectWithoutProperties(params, [\"notes\"]),\n          data = Object.assign(rest, normalizeNotes(notes));\n\n\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    },\n    fetch: function fetch(subscriptionId, callback) {\n\n      /*\n       * Fetch a Subscription given Subcription ID\n       *\n       * @param {String} subscriptionId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!subscriptionId) {\n\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      var url = BASE_URL + \"/\" + subscriptionId;\n\n      return api.get({ url: url }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Get all Subscriptions\n       *\n       * @param {Object} params\n       * @param {Funtion} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL;\n\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    cancel: function cancel(subscriptionId) {\n      var cancelAtCycleEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var callback = arguments[2];\n\n\n      /*\n       * Cancel a subscription given id and optional cancelAtCycleEnd\n       *\n       * @param {String} subscription\n       * @param {Boolean} cancelAtCycleEnd\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL + \"/\" + subscriptionId + \"/cancel\";\n\n      if (!subscriptionId) {\n\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      if (typeof cancelAtCycleEnd !== \"boolean\") {\n\n        return Promise.reject(\"The second parameter, Cancel at the end of cycle\" + \" should be a Boolean\");\n      }\n\n      return api.post(_extends({\n        url: url\n      }, cancelAtCycleEnd && { data: { cancel_at_cycle_end: 1 } }), callback);\n    },\n    createAddon: function createAddon(subscriptionId, params, callback) {\n\n      /*\n       * Creates addOn for a given subscription\n       *\n       * @param {String} subscriptionId\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL + \"/\" + subscriptionId + \"/addons\";\n\n      if (!subscriptionId) {\n\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      return api.post({\n        url: url,\n        data: _extends({}, params)\n      }, callback);\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}