{"ast":null,"code":"var _jsxFileName = \"E:\\\\redo final\\\\frontend-main\\\\src\\\\containers\\\\ForgotPasswordPage\\\\Forgotpassword\\\\index.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState, useEffect } from \"react\"; // import authSvg from \"../../../assests/forget.svg\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkEmail, checkOtp, changePassword } from \"../../../actions\";\nimport Layout from \"../../../components/Layout\";\nimport \"tailwindcss/tailwind.css\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForgetPassword = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const forgotPassword = useSelector(state => state.forgotPassword);\n  const {\n    status,\n    checked,\n    otp,\n    checkedOtp\n  } = forgotPassword;\n  const [email, setEmail] = useState(\"\");\n  const [inputOtp, setInputOtp] = useState(\"\");\n  const [inputNewPass, setInputNewPass] = useState(\"\");\n  const [confirmPass, setConfirmPass] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    console.log(forgotPassword.status, \"status\");\n\n    switch (forgotPassword.status) {\n      case \"checking email\":\n        toast.info(`checking email ${email}`);\n        break;\n\n      case \"checking email success\":\n        toast.success(`OTP code is sending to email ${email}, check your inbox!! make sure you check spam`);\n        break;\n\n      case \"checking email failed\":\n        toast.error(`no such account with email ${email}`);\n        break;\n\n      case \"checking otp\":\n        toast.info(`checking otp`);\n        break;\n\n      case \"checking otp success\":\n        toast.success(`otp verified, lets change the password`);\n        break;\n\n      case \"checking otp failed\":\n        toast.error(`otp code not match, please input the correct otp code`);\n        break;\n\n      case \"changing password\":\n        toast.info(`changing password`);\n        break;\n\n      case \"changing password success\":\n        toast.success(`password changing, now redirect to dashboard`);\n        setRedirect(true);\n        break;\n\n      case \"changing password failed\":\n        toast.error(`password not match, please enter the same password`);\n        break;\n\n      case \"changing password error\":\n        toast.error(`password change error, please try again!!! we will refresh the page`);\n        window.location.reload();\n        break;\n\n      default:\n        break;\n    }\n  }, [forgotPassword.status]);\n\n  const handleSubmitEmail = e => {\n    e.preventDefault();\n    const forgotPasswordData = {\n      email\n    };\n    dispatch(checkEmail(forgotPasswordData));\n    return 0;\n  };\n\n  if (forgotPassword.error) {\n    toast.warning(status);\n    return 0;\n  }\n\n  const handleSubmitOtp = e => {\n    e.preventDefault();\n    const submitOtpData = {\n      otp,\n      inputOtp\n    };\n    dispatch(checkOtp(submitOtpData));\n    return 0;\n  };\n\n  const handleSubmitNewPass = e => {\n    e.preventDefault();\n    const submitNewPass = {\n      confirmPass,\n      pass: inputNewPass,\n      email\n    };\n    dispatch(changePassword(submitNewPass));\n    return 0;\n  };\n\n  if (redirect) {\n    console.log(\"redirect \", redirect);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center min-h-screen bg-white dark:bg-gray-900\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-md mx-auto my-10 pt-10 pb-16 rounded border-solid border shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"my-3 text-3xl font-semibold text-gray-700 dark:text-gray-200\",\n              children: \"Forget Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 dark:text-gray-400\",\n              children: \"enter your email to start reset your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-7\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: checkedOtp ? handleSubmitNewPass : checked ? handleSubmitOtp : handleSubmitEmail,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"main\",\n                  className: \"block mb-2 text-sm text-gray-600 dark:text-gray-400\",\n                  children: checkedOtp ? \"password\" : checked ? \"OTP Code\" : \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: checkedOtp ? \"password\" : checked ? \"text\" : \"email\",\n                  name: \"main\",\n                  id: \"main\",\n                  placeholder: checkedOtp ? \"Password\" : checked ? \"OTP Code\" : \"your@email.com\",\n                  onChange: e => checkedOtp ? setInputNewPass(e.target.value) : checked ? setInputOtp(e.target.value) : setEmail(e.target.value),\n                  value: checkedOtp ? inputNewPass : checked ? inputOtp : email,\n                  pattern: checkedOtp ? \".{8,20}\" : checked ? \".{6,6}\" : \".{0,40}\",\n                  className: \"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300 dark:bg-gray-700 dark:text-white dark:placeholder-gray-500 dark:border-gray-600 dark:focus:ring-gray-900 dark:focus:border-gray-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), checkedOtp ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"re-password\",\n                    className: \"block mb-2 text-sm text-gray-600 dark:text-gray-400\",\n                    children: \"Re-Enter Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300 dark:bg-gray-700 dark:text-white dark:placeholder-gray-500 dark:border-gray-600 dark:focus:ring-gray-900 dark:focus:border-gray-500\",\n                    type: \"password\",\n                    id: \"re-password\",\n                    name: \"re-password\",\n                    placeholder: \"Confirm Password\",\n                    onChange: e => setConfirmPass(e.target.value),\n                    value: confirmPass\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-6 flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"w-1/2 px-1 py-2 text-white bg-indigo-500 rounded-md focus:bg-indigo-600 focus:outline-none\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgetPassword, \"m+G769BIG9yIlwPVz83PBRypuwk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["E:/redo final/frontend-main/src/containers/ForgotPasswordPage/Forgotpassword/index.js"],"names":["React","useState","useEffect","ToastContainer","toast","Redirect","Route","useDispatch","useSelector","checkEmail","checkOtp","changePassword","Layout","ForgetPassword","history","dispatch","forgotPassword","state","status","checked","otp","checkedOtp","email","setEmail","inputOtp","setInputOtp","inputNewPass","setInputNewPass","confirmPass","setConfirmPass","redirect","setRedirect","console","log","info","success","error","window","location","reload","handleSubmitEmail","e","preventDefault","forgotPasswordData","warning","handleSubmitOtp","submitOtpData","handleSubmitNewPass","submitNewPass","pass","target","value"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState, useEffect } from \"react\";\n// import authSvg from \"../../../assests/forget.svg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkEmail, checkOtp, changePassword } from \"../../../actions\";\nimport Layout from \"../../../components/Layout\";\nimport \"tailwindcss/tailwind.css\";\nimport \"./style.css\";\n\nconst ForgetPassword = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const forgotPassword = useSelector((state) => state.forgotPassword);\n  const { status, checked, otp, checkedOtp } = forgotPassword;\n\n  const [email, setEmail] = useState(\"\");\n  const [inputOtp, setInputOtp] = useState(\"\");\n\n  const [inputNewPass, setInputNewPass] = useState(\"\");\n  const [confirmPass, setConfirmPass] = useState(\"\");\n\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    console.log(forgotPassword.status, \"status\");\n    switch (forgotPassword.status) {\n      case \"checking email\":\n        toast.info(`checking email ${email}`);\n\n        break;\n      case \"checking email success\":\n        toast.success(\n          `OTP code is sending to email ${email}, check your inbox!! make sure you check spam`\n        );\n        break;\n      case \"checking email failed\":\n        toast.error(`no such account with email ${email}`);\n        break;\n      case \"checking otp\":\n        toast.info(`checking otp`);\n        break;\n      case \"checking otp success\":\n        toast.success(`otp verified, lets change the password`);\n        break;\n      case \"checking otp failed\":\n        toast.error(`otp code not match, please input the correct otp code`);\n        break;\n      case \"changing password\":\n        toast.info(`changing password`);\n        break;\n      case \"changing password success\":\n        toast.success(`password changing, now redirect to dashboard`);\n\n        setRedirect(true);\n        break;\n      case \"changing password failed\":\n        toast.error(`password not match, please enter the same password`);\n        break;\n      case \"changing password error\":\n        toast.error(\n          `password change error, please try again!!! we will refresh the page`\n        );\n        window.location.reload();\n        break;\n      default:\n        break;\n    }\n  }, [forgotPassword.status]);\n\n  const handleSubmitEmail = (e) => {\n    e.preventDefault();\n\n    const forgotPasswordData = {\n      email,\n    };\n\n    dispatch(checkEmail(forgotPasswordData));\n\n    return 0;\n  };\n\n  if (forgotPassword.error) {\n    toast.warning(status);\n    return 0;\n  }\n\n  const handleSubmitOtp = (e) => {\n    e.preventDefault();\n\n    const submitOtpData = {\n      otp,\n      inputOtp,\n    };\n\n    dispatch(checkOtp(submitOtpData));\n    return 0;\n  };\n\n  const handleSubmitNewPass = (e) => {\n    e.preventDefault();\n\n    const submitNewPass = {\n      confirmPass,\n      pass: inputNewPass,\n      email,\n    };\n\n    dispatch(changePassword(submitNewPass));\n    return 0;\n  };\n\n  if (redirect) {\n    console.log(\"redirect \", redirect);\n    return <Redirect push to=\"/\" />;\n  }\n\n  return (\n    <Layout>\n      <div className=\"flex items-center min-h-screen bg-white dark:bg-gray-900\">\n        <ToastContainer />\n        <div className=\"container mx-auto\">\n          <div className=\"max-w-md mx-auto my-10 pt-10 pb-16 rounded border-solid border shadow\">\n            <div className=\"text-center\">\n              <h1 className=\"my-3 text-3xl font-semibold text-gray-700 dark:text-gray-200\">\n                Forget Password\n              </h1>\n              <p className=\"text-gray-500 dark:text-gray-400\">\n                enter your email to start reset your password\n              </p>\n            </div>\n            <div className=\"m-7\">\n              <form\n                onSubmit={\n                  checkedOtp\n                    ? handleSubmitNewPass\n                    : checked\n                    ? handleSubmitOtp\n                    : handleSubmitEmail\n                }>\n                <div className=\"mb-6\">\n                  <label\n                    for=\"main\"\n                    className=\"block mb-2 text-sm text-gray-600 dark:text-gray-400\">\n                    {checkedOtp\n                      ? \"password\"\n                      : checked\n                      ? \"OTP Code\"\n                      : \"Email Address\"}\n                  </label>\n                  <input\n                    type={checkedOtp ? \"password\" : checked ? \"text\" : \"email\"}\n                    name=\"main\"\n                    id=\"main\"\n                    placeholder={\n                      checkedOtp\n                        ? \"Password\"\n                        : checked\n                        ? \"OTP Code\"\n                        : \"your@email.com\"\n                    }\n                    onChange={(e) =>\n                      checkedOtp\n                        ? setInputNewPass(e.target.value)\n                        : checked\n                        ? setInputOtp(e.target.value)\n                        : setEmail(e.target.value)\n                    }\n                    value={\n                      checkedOtp ? inputNewPass : checked ? inputOtp : email\n                    }\n                    pattern={\n                      checkedOtp ? \".{8,20}\" : checked ? \".{6,6}\" : \".{0,40}\"\n                    }\n                    className=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300 dark:bg-gray-700 dark:text-white dark:placeholder-gray-500 dark:border-gray-600 dark:focus:ring-gray-900 dark:focus:border-gray-500\"\n                  />\n                  {checkedOtp ? (\n                    <>\n                      <label\n                        for=\"re-password\"\n                        className=\"block mb-2 text-sm text-gray-600 dark:text-gray-400\">\n                        Re-Enter Password\n                      </label>\n                      <input\n                        className=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300 dark:bg-gray-700 dark:text-white dark:placeholder-gray-500 dark:border-gray-600 dark:focus:ring-gray-900 dark:focus:border-gray-500\"\n                        type=\"password\"\n                        id=\"re-password\"\n                        name=\"re-password\"\n                        placeholder=\"Confirm Password\"\n                        onChange={(e) => setConfirmPass(e.target.value)}\n                        value={confirmPass}\n                      />\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n                <div className=\"mb-6 flex justify-center\">\n                  <button\n                    type=\"submit\"\n                    className=\"w-1/2 px-1 py-2 text-white bg-indigo-500 rounded-md focus:bg-indigo-600 focus:outline-none\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ForgetPassword;\n"]},"metadata":{},"sourceType":"module"}