{"ast":null,"code":"var _jsxFileName = \"E:\\\\redo final\\\\frontend-main\\\\src\\\\components\\\\MaterialUi\\\\index.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from \"react\";\nimport { IoIosClose } from \"react-icons/io\";\nimport \"./style.css\";\n/**\n * @author \n * @function\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  if (!props.visible) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalFixedBg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalClose\",\n          onClick: props.onClose,\n          children: /*#__PURE__*/_jsxDEV(IoIosClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalContainer\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Modal;\n\nconst MaterialInput = props => {\n  _s();\n\n  const [focus, setFocus] = useState(false);\n  const [touch, setTouch] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"materialInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `label ${focus ? \"focus\" : \"\"}`,\n      style: {\n        top: 0,\n        right: 0,\n        width: \"fit-content\",\n        lineHeight: \"none\",\n        whiteSpace: \"nowrap\"\n      },\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: props.type,\n        value: props.value,\n        onChange: props.onChange,\n        onFocus: e => {\n          setFocus(true);\n          setTouch(true);\n        },\n        onBlur: e => {\n          if (e.target.value === \"\") {\n            setFocus(false);\n          } else {\n            setTouch(false);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), props.rightElement ? props.rightElement : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), touch && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"10px\",\n        color: \"red\",\n        fontWeight: 500\n      },\n      children: `${props.label} is required`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MaterialInput, \"BxWY73xKO1GxRDYFq2BkJOrLywU=\");\n\n_c2 = MaterialInput;\n\nconst MaterialButton = props => {\n  const onClick = () => {\n    props.onClick && props.onClick();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      ...props.style\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"materialButton\",\n      style: {\n        backgroundColor: props.bgColor,\n        color: props.textColor\n      },\n      onClick: onClick,\n      children: [props.icon && props.icon, props.title && props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = MaterialButton;\n\nconst NormalButton = props => {\n  const onClick = () => {\n    props.onClick && props.onClick();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      ...props.style\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"NormalButton\",\n      style: {\n        backgroundColor: props.bgColor,\n        color: props.textColor,\n        border: props.border\n      },\n      onClick: onClick,\n      children: [props.icon && props.icon, props.title && props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = NormalButton;\n\nconst DropdownMenu = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"headerDropdownContainer\",\n    children: [props.menu, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upArrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), props.firstMenu, /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"headerDropdownMenu\",\n        children: props.menus && props.menus.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: e => {\n              if (item.onClick) {\n                e.preventDefault();\n                item.onClick && item.onClick();\n              }\n            },\n            href: `${item.href}`,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = DropdownMenu;\n\nconst Anchor = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", { ...props,\n    className: \"anchorButton\",\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Anchor;\n\nconst Breed = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"breed\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.breed && props.breed.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.href,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), props.breedIcon]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Breed;\nexport { Modal, MaterialInput, MaterialButton, DropdownMenu, Anchor, Breed, NormalButton };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"MaterialInput\");\n$RefreshReg$(_c3, \"MaterialButton\");\n$RefreshReg$(_c4, \"NormalButton\");\n$RefreshReg$(_c5, \"DropdownMenu\");\n$RefreshReg$(_c6, \"Anchor\");\n$RefreshReg$(_c7, \"Breed\");","map":{"version":3,"sources":["E:/redo final/frontend-main/src/components/MaterialUi/index.js"],"names":["React","useState","IoIosClose","Modal","props","visible","position","onClose","children","MaterialInput","focus","setFocus","touch","setTouch","top","right","width","lineHeight","whiteSpace","label","display","type","value","onChange","e","target","rightElement","fontSize","color","fontWeight","MaterialButton","onClick","style","backgroundColor","bgColor","textColor","icon","title","NormalButton","border","DropdownMenu","menu","firstMenu","menus","map","item","index","preventDefault","href","Anchor","name","Breed","breed","breedIcon"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport { IoIosClose } from \"react-icons/io\";\nimport \"./style.css\";\n\n/**\n * @author \n * @function\n **/\n\nconst Modal = (props) => {\n  if (!props.visible) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"modalFixedBg\">\n        <div style={{ position: \"relative\" }}>\n          <div className=\"modalClose\" onClick={props.onClose}>\n            <IoIosClose />\n          </div>\n          <div className=\"modalContainer\">{props.children}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst MaterialInput = (props) => {\n  const [focus, setFocus] = useState(false);\n  const [touch, setTouch] = useState(false);\n  return (\n    <div className=\"materialInput\">\n      <label\n        className={`label ${focus ? \"focus\" : \"\"}`}\n        style={{\n          top: 0,\n          right: 0,\n          width: \"fit-content\",\n          lineHeight: \"none\",\n          whiteSpace: \"nowrap\",\n        }}>\n        {props.label}\n      </label>\n      <div\n        style={{\n          display: \"flex\",\n        }}>\n        <input\n          className=\"input\"\n          type={props.type}\n          value={props.value}\n          onChange={props.onChange}\n          onFocus={(e) => {\n            setFocus(true);\n            setTouch(true);\n          }}\n          onBlur={(e) => {\n            if (e.target.value === \"\") {\n              setFocus(false);\n            } else {\n              setTouch(false);\n            }\n          }}\n        />\n        {props.rightElement ? props.rightElement : null}\n      </div>\n      {touch && (\n        <div style={{ fontSize: \"10px\", color: \"red\", fontWeight: 500 }}>\n          {`${props.label} is required`}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MaterialButton = (props) => {\n  const onClick = () => {\n    props.onClick && props.onClick();\n  };\n  return (\n    <div style={{ width: \"100%\", ...props.style }}>\n      <button\n        className=\"materialButton\"\n        style={{ backgroundColor: props.bgColor, color: props.textColor }}\n        onClick={onClick}>\n        {props.icon && props.icon}\n        {props.title && props.title}\n      </button>\n    </div>\n  );\n};\n\nconst NormalButton = (props) => {\n  const onClick = () => {\n    props.onClick && props.onClick();\n  };\n\n  return (\n    <div style={{ width: \"100%\", ...props.style }}>\n      <button\n        className=\"NormalButton\"\n        style={{\n          backgroundColor: props.bgColor,\n          color: props.textColor,\n          border: props.border,\n        }}\n        onClick={onClick}>\n        {props.icon && props.icon}\n        {props.title && props.title}\n      </button>\n    </div>\n  );\n};\n\nconst DropdownMenu = (props) => {\n  return (\n    <div className=\"headerDropdownContainer\">\n      {props.menu}\n      <div className=\"dropdown\">\n        <div className=\"upArrow\"></div>\n        {props.firstMenu}\n        <ul className=\"headerDropdownMenu\">\n          {props.menus &&\n            props.menus.map((item, index) => (\n              <li key={index}>\n                <a\n                  onClick={(e) => {\n                    if (item.onClick) {\n                      e.preventDefault();\n                      item.onClick && item.onClick();\n                    }\n                  }}\n                  href={`${item.href}`}>\n                  {item.label}\n                </a>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Anchor = (props) => {\n  return (\n    <button {...props} className=\"anchorButton\">\n      {props.name}\n    </button>\n  );\n};\n\nconst Breed = (props) => {\n  return (\n    <div className=\"breed\">\n      <ul>\n        {props.breed &&\n          props.breed.map((item, index) => (\n            <li key={index}>\n              <a href={item.href}>{item.name}</a>\n              {props.breedIcon}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport {\n  Modal,\n  MaterialInput,\n  MaterialButton,\n  DropdownMenu,\n  Anchor,\n  Breed,\n  NormalButton,\n};\n"]},"metadata":{},"sourceType":"module"}