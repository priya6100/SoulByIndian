{"ast":null,"code":"/** @format */\nimport axios from \"../helpers/axios\";\nimport { wishlistConstants } from \"./constants\";\nimport store from \"../store\";\n\nconst getWishlistItems = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: wishlistConstants.ADD_TO_WISHLIST_REQUEST\n      });\n      const res = await axios.get(`/user/getWishlistItems`);\n\n      if (res.status === 200) {\n        const {\n          wishlistItems\n        } = res.data;\n\n        if (wishlistItems) {\n          dispatch({\n            type: wishlistConstants.ADD_TO_WISHLIST_SUCCESS,\n            payload: {\n              wishlistItems\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addToWishlist = (product, newQty = 1) => {\n  return async dispatch => {\n    const {\n      wishlist: {\n        wishlistItems\n      },\n      auth\n    } = store.getState(); //console.log('action::products', products);\n    //const product = action.payload.product;\n    //const products = state.products;\n\n    const qty = wishlistItems[product._id] ? parseInt(wishlistItems[product._id].qty + newQty) : 1;\n    wishlistItems[product._id] = { ...product,\n      qty\n    };\n    const payload = {\n      wishlistItems: [{\n        product: product._id,\n        name: product.name,\n        price: product.price,\n        img: product.img,\n        size: product.size,\n        color: product.color,\n        quantity: qty\n      }]\n    };\n\n    if (auth.authenticate) {\n      dispatch({\n        type: wishlistConstants.ADD_TO_WISHLIST_REQUEST\n      });\n      const res = await axios.post(`/user/wishlist/addtowishlist`, payload);\n      console.log(res);\n      dispatch({\n        type: wishlistConstants.ADD_TO_WISHLIST_SUCCESS,\n        payload: {\n          wishlistItems\n        }\n      });\n\n      if (res.status === 201) {\n        dispatch(getWishlistItems());\n      }\n    } else {\n      localStorage.setItem(\"wishlist\", JSON.stringify(wishlistItems));\n    }\n  };\n};\nexport const removeWishlistItem = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: wishlistConstants.REMOVE_WISHLIST_ITEM_REQUEST\n      });\n      const res = await axios.post(`/user/wishlist/removeItem`, {\n        payload\n      });\n\n      if (res.status === 202) {\n        dispatch({\n          type: wishlistConstants.REMOVE_WISHLIST_ITEM_SUCCESS\n        });\n        dispatch(getWishlistItems());\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: wishlistConstants.REMOVE_WISHLIST_ITEM_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updateWishlist = () => {\n  return async dispatch => {\n    const {\n      auth\n    } = store.getState();\n    let wishlistItems = localStorage.getItem(\"wishlist\") ? JSON.parse(localStorage.getItem(\"wishlist\")) : null;\n    console.log(\"upppppppppp\");\n\n    if (auth.authenticate) {\n      localStorage.removeItem(\"wishlist\"); // dispatch(getWishlistItems());\n\n      if (wishlistItems) {\n        const payload = {\n          wishlistItems: Object.keys(wishlistItems).map((key, index) => {\n            return {\n              product: wishlistItems[key]._id,\n              quantity: wishlistItems[key].qty,\n              name: wishlistItems[key].name,\n              price: wishlistItems[key].price,\n              img: wishlistItems[key].img,\n              size: wishlistItems[key].size,\n              color: wishlistItems[key].color\n            };\n          })\n        };\n\n        if (Object.keys(wishlistItems).length > 0) {\n          const res = await axios.post(`/user/wishlist/addtowishlist`, payload);\n\n          if (res.status === 201) {\n            dispatch(getWishlistItems());\n          }\n        }\n      }\n    } else {\n      if (wishlistItems) {\n        dispatch({\n          type: wishlistConstants.ADD_TO_WISHLIST_SUCCESS,\n          payload: {\n            wishlistItems\n          }\n        });\n      }\n    }\n  };\n};\nexport { getWishlistItems };","map":{"version":3,"sources":["E:/redo final/frontend-main/src/actions/wishlist.action.js"],"names":["axios","wishlistConstants","store","getWishlistItems","dispatch","type","ADD_TO_WISHLIST_REQUEST","res","get","status","wishlistItems","data","ADD_TO_WISHLIST_SUCCESS","payload","error","console","log","addToWishlist","product","newQty","wishlist","auth","getState","qty","_id","parseInt","name","price","img","size","color","quantity","authenticate","post","localStorage","setItem","JSON","stringify","removeWishlistItem","REMOVE_WISHLIST_ITEM_REQUEST","REMOVE_WISHLIST_ITEM_SUCCESS","REMOVE_WISHLIST_ITEM_FAILURE","updateWishlist","getItem","parse","removeItem","Object","keys","map","key","index","length"],"mappings":"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","sourcesContent":["/** @format */\n\nimport axios from \"../helpers/axios\";\nimport { wishlistConstants } from \"./constants\";\nimport store from \"../store\";\n\nconst getWishlistItems = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: wishlistConstants.ADD_TO_WISHLIST_REQUEST });\n      const res = await axios.get(`/user/getWishlistItems`);\n      if (res.status === 200) {\n        const { wishlistItems } = res.data;\n\n        if (wishlistItems) {\n          dispatch({\n            type: wishlistConstants.ADD_TO_WISHLIST_SUCCESS,\n            payload: { wishlistItems },\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addToWishlist = (product, newQty = 1) => {\n  return async (dispatch) => {\n    const {\n      wishlist: { wishlistItems },\n      auth,\n    } = store.getState();\n    //console.log('action::products', products);\n    //const product = action.payload.product;\n    //const products = state.products;\n    const qty = wishlistItems[product._id]\n      ? parseInt(wishlistItems[product._id].qty + newQty)\n      : 1;\n\n    wishlistItems[product._id] = {\n      ...product,\n      qty,\n    };\n\n    const payload = {\n      wishlistItems: [\n        {\n          product: product._id,\n          name: product.name,\n          price: product.price,\n          img: product.img,\n          size: product.size,\n          color: product.color,\n          quantity: qty,\n        },\n      ],\n    };\n\n    if (auth.authenticate) {\n      dispatch({ type: wishlistConstants.ADD_TO_WISHLIST_REQUEST });\n\n      const res = await axios.post(`/user/wishlist/addtowishlist`, payload);\n      console.log(res);\n      dispatch({\n        type: wishlistConstants.ADD_TO_WISHLIST_SUCCESS,\n        payload: { wishlistItems },\n      });\n      if (res.status === 201) {\n        dispatch(getWishlistItems());\n      }\n    } else {\n      localStorage.setItem(\"wishlist\", JSON.stringify(wishlistItems));\n    }\n  };\n};\n\nexport const removeWishlistItem = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: wishlistConstants.REMOVE_WISHLIST_ITEM_REQUEST });\n      const res = await axios.post(`/user/wishlist/removeItem`, { payload });\n      if (res.status === 202) {\n        dispatch({ type: wishlistConstants.REMOVE_WISHLIST_ITEM_SUCCESS });\n        dispatch(getWishlistItems());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: wishlistConstants.REMOVE_WISHLIST_ITEM_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateWishlist = () => {\n  return async (dispatch) => {\n    const { auth } = store.getState();\n    let wishlistItems = localStorage.getItem(\"wishlist\")\n      ? JSON.parse(localStorage.getItem(\"wishlist\"))\n      : null;\n\n    console.log(\"upppppppppp\");\n\n    if (auth.authenticate) {\n      localStorage.removeItem(\"wishlist\");\n      // dispatch(getWishlistItems());\n      if (wishlistItems) {\n        const payload = {\n          wishlistItems: Object.keys(wishlistItems).map((key, index) => {\n            return {\n              product: wishlistItems[key]._id,\n              quantity: wishlistItems[key].qty,\n              name: wishlistItems[key].name,\n              price: wishlistItems[key].price,\n              img: wishlistItems[key].img,\n              size: wishlistItems[key].size,\n              color: wishlistItems[key].color,\n            };\n          }),\n        };\n        if (Object.keys(wishlistItems).length > 0) {\n          const res = await axios.post(`/user/wishlist/addtowishlist`, payload);\n          if (res.status === 201) {\n            dispatch(getWishlistItems());\n          }\n        }\n      }\n    } else {\n      if (wishlistItems) {\n        dispatch({\n          type: wishlistConstants.ADD_TO_WISHLIST_SUCCESS,\n          payload: { wishlistItems },\n        });\n      }\n    }\n  };\n};\n\nexport { getWishlistItems };\n"]},"metadata":{},"sourceType":"module"}