{"ast":null,"code":"\"use strict\";\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeBoolean = _require.normalizeBoolean,\n    normalizeNotes = _require.normalizeNotes;\n\nmodule.exports = function (api) {\n  return {\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          payment_id = params.payment_id,\n          recipient_settlement_id = params.recipient_settlement_id;\n      var url = '/transfers';\n\n      if (payment_id) {\n        url = '/payments/' + payment_id + '/transfers';\n      }\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n      return api.get({\n        url: url,\n        data: {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip,\n          recipient_settlement_id: recipient_settlement_id\n        }\n      }, callback);\n    },\n    fetch: function fetch(transferId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n      var payment_id = params.payment_id;\n\n      if (!transferId) {\n        throw new Error('`transfer_id` is mandatory');\n      }\n\n      var url = '/transfers/' + transferId;\n      return api.get({\n        url: url\n      }, callback);\n    },\n    create: function create(params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      if (data.on_hold) {\n        data.on_hold = normalizeBoolean(data.on_hold);\n      }\n\n      return api.post({\n        url: '/transfers',\n        data: data\n      }, callback);\n    },\n    edit: function edit(transferId, params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      if (typeof data.on_hold !== \"undefined\") {\n        data.on_hold = normalizeBoolean(data.on_hold);\n      }\n\n      return api.patch({\n        url: '/transfers/' + transferId,\n        data: data\n      }, callback);\n    },\n    reverse: function reverse(transferId, params, callback) {\n      if (!transferId) {\n        throw new Error('`transfer_id` is mandatory');\n      }\n\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n      var url = '/transfers/' + transferId + '/reversals';\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    }\n  };\n};","map":{"version":3,"sources":["E:/redo final/frontend-main/node_modules/razorpay/dist/resources/transfers.js"],"names":["_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","_require","require","normalizeDate","normalizeBoolean","normalizeNotes","module","exports","api","all","params","arguments","length","undefined","callback","from","to","count","skip","payment_id","recipient_settlement_id","url","Number","get","data","fetch","transferId","Error","create","notes","rest","assign","on_hold","post","edit","patch","reverse"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeBoolean = _require.normalizeBoolean,\n    normalizeNotes = _require.normalizeNotes;\n\nmodule.exports = function (api) {\n  return {\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          payment_id = params.payment_id,\n          recipient_settlement_id = params.recipient_settlement_id;\n\n      var url = '/transfers';\n\n      if (payment_id) {\n        url = '/payments/' + payment_id + '/transfers';\n      }\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n\n      return api.get({\n        url: url,\n        data: {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip,\n          recipient_settlement_id: recipient_settlement_id\n        }\n      }, callback);\n    },\n    fetch: function fetch(transferId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n      var payment_id = params.payment_id;\n\n      if (!transferId) {\n        throw new Error('`transfer_id` is mandatory');\n      }\n\n      var url = '/transfers/' + transferId;\n\n      return api.get({\n        url: url\n      }, callback);\n    },\n    create: function create(params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      if (data.on_hold) {\n        data.on_hold = normalizeBoolean(data.on_hold);\n      }\n\n      return api.post({\n        url: '/transfers',\n        data: data\n      }, callback);\n    },\n    edit: function edit(transferId, params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      if (typeof data.on_hold !== \"undefined\") {\n        data.on_hold = normalizeBoolean(data.on_hold);\n      }\n\n      return api.patch({\n        url: '/transfers/' + transferId,\n        data: data\n      }, callback);\n    },\n    reverse: function reverse(transferId, params, callback) {\n      if (!transferId) {\n        throw new Error('`transfer_id` is mandatory');\n      }\n\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n      var url = '/transfers/' + transferId + '/reversals';\n\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}