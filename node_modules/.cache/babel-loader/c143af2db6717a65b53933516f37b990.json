{"ast":null,"code":"'use strict';\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeNotes = _require.normalizeNotes;\n\nmodule.exports = function (api) {\n  return {\n    create: function create(params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n      return api.post({\n        url: '/customers',\n        data: data\n      }, callback);\n    },\n    edit: function edit(customerId, params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n      return api.put({\n        url: '/customers/' + customerId,\n        data: data\n      }, callback);\n    },\n    fetch: function fetch(customerId, callback) {\n      return api.get({\n        url: '/customers/' + customerId\n      }, callback);\n    },\n    fetchTokens: function fetchTokens(customerId, callback) {\n      return api.get({\n        url: '/customers/' + customerId + '/tokens'\n      }, callback);\n    },\n    fetchToken: function fetchToken(customerId, tokenId, callback) {\n      return api.get({\n        url: '/customers/' + customerId + '/tokens/' + tokenId\n      }, callback);\n    },\n    deleteToken: function deleteToken(customerId, tokenId, callback) {\n      return api.delete({\n        url: '/customers/' + customerId + '/tokens/' + tokenId\n      }, callback);\n    }\n  };\n};","map":{"version":3,"sources":["E:/redo final/frontend-main/node_modules/razorpay/dist/resources/customers.js"],"names":["_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","_require","require","normalizeNotes","module","exports","api","create","params","callback","notes","rest","data","assign","post","url","edit","customerId","put","fetch","get","fetchTokens","fetchToken","tokenId","deleteToken","delete"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeNotes = _require.normalizeNotes;\n\nmodule.exports = function (api) {\n  return {\n    create: function create(params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      return api.post({\n        url: '/customers',\n        data: data\n      }, callback);\n    },\n    edit: function edit(customerId, params, callback) {\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      return api.put({\n        url: '/customers/' + customerId,\n        data: data\n      }, callback);\n    },\n    fetch: function fetch(customerId, callback) {\n      return api.get({\n        url: '/customers/' + customerId\n      }, callback);\n    },\n    fetchTokens: function fetchTokens(customerId, callback) {\n      return api.get({\n        url: '/customers/' + customerId + '/tokens'\n      }, callback);\n    },\n    fetchToken: function fetchToken(customerId, tokenId, callback) {\n      return api.get({\n        url: '/customers/' + customerId + '/tokens/' + tokenId\n      }, callback);\n    },\n    deleteToken: function deleteToken(customerId, tokenId, callback) {\n      return api.delete({\n        url: '/customers/' + customerId + '/tokens/' + tokenId\n      }, callback);\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}