{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Promise = require(\"promise\");\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeNotes = _require.normalizeNotes;\n\nvar BASE_URL = '/virtual_accounts',\n    ID_REQUIRED_MSG = \"`virtual_account_id` is mandatory\";\n\nmodule.exports = function (api) {\n  return {\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          otherParams = _objectWithoutProperties(params, [\"from\", \"to\", \"count\", \"skip\"]);\n\n      var url = BASE_URL;\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n      return api.get({\n        url: url,\n        data: _extends({\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        }, otherParams)\n      }, callback);\n    },\n    fetch: function fetch(virtualAccountId, callback) {\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var url = BASE_URL + \"/\" + virtualAccountId;\n      return api.get({\n        url: url\n      }, callback);\n    },\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, [\"notes\"]);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n      return api.post({\n        url: BASE_URL,\n        data: data\n      }, callback);\n    },\n    close: function close(virtualAccountId, callback) {\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var data = {\n        status: 'closed'\n      };\n      return api.patch({\n        url: BASE_URL + \"/\" + virtualAccountId,\n        data: data\n      }, callback);\n    },\n    fetchPayments: function fetchPayments(virtualAccountId, callback) {\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var url = BASE_URL + \"/\" + virtualAccountId + \"/payments\";\n      return api.get({\n        url: url\n      }, callback);\n    }\n  };\n};","map":{"version":3,"sources":["E:/redo final/frontend-main/node_modules/razorpay/dist/resources/virtualAccounts.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","Promise","require","_require","normalizeDate","normalizeNotes","BASE_URL","ID_REQUIRED_MSG","module","exports","api","all","params","undefined","callback","from","to","count","skip","otherParams","url","Number","get","data","fetch","virtualAccountId","reject","create","notes","rest","post","close","status","patch","fetchPayments"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Promise = require(\"promise\");\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeNotes = _require.normalizeNotes;\n\nvar BASE_URL = '/virtual_accounts',\n    ID_REQUIRED_MSG = \"`virtual_account_id` is mandatory\";\n\nmodule.exports = function (api) {\n  return {\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          otherParams = _objectWithoutProperties(params, [\"from\", \"to\", \"count\", \"skip\"]);\n\n      var url = BASE_URL;\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n\n      return api.get({\n        url: url,\n        data: _extends({\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        }, otherParams)\n      }, callback);\n    },\n    fetch: function fetch(virtualAccountId, callback) {\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var url = BASE_URL + \"/\" + virtualAccountId;\n\n      return api.get({\n        url: url\n      }, callback);\n    },\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, [\"notes\"]);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      return api.post({\n        url: BASE_URL,\n        data: data\n      }, callback);\n    },\n    close: function close(virtualAccountId, callback) {\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var data = {\n        status: 'closed'\n      };\n\n      return api.patch({\n        url: BASE_URL + \"/\" + virtualAccountId,\n        data: data\n      }, callback);\n    },\n    fetchPayments: function fetchPayments(virtualAccountId, callback) {\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var url = BASE_URL + \"/\" + virtualAccountId + \"/payments\";\n\n      return api.get({\n        url: url\n      }, callback);\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}